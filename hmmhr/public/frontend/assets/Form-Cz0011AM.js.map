{"version":3,"file":"Form-Cz0011AM.js","sources":["../../../../frontend/src/views/leave/Form.vue"],"sourcesContent":["<template>\n\t<ion-page>\n\t\t<ion-content :fullscreen=\"true\">\n\t\t\t<FormView\n\t\t\t\tv-if=\"formFields.data\"\n\t\t\t\tdoctype=\"Leave Application\"\n\t\t\t\tv-model=\"leaveApplication\"\n\t\t\t\t:isSubmittable=\"true\"\n\t\t\t\t:fields=\"formFields.data\"\n\t\t\t\t:id=\"props.id\"\n\t\t\t\t:showAttachmentView=\"true\"\n\t\t\t\t@validateForm=\"validateForm\"\n\t\t\t/>\n\t\t</ion-content>\n\t</ion-page>\n</template>\n\n<script setup>\nimport { IonPage, IonContent } from \"@ionic/vue\"\nimport { createResource } from \"frappe-ui\"\nimport { ref, watch, inject } from \"vue\"\n\nimport FormView from \"@/components/FormView.vue\"\n\nconst dayjs = inject(\"$dayjs\")\nconst __ = inject(\"$translate\")\nconst today = dayjs().format(\"YYYY-MM-DD\")\n\nconst props = defineProps({\n\tid: {\n\t\ttype: String,\n\t\trequired: false,\n\t},\n})\n\nconst sessionEmployee = inject(\"$employee\")\nconst currEmployee = ref(sessionEmployee.data.name)\n\n// reactive object to store form data\nconst leaveApplication = ref({})\n\n// get form fields\nconst formFields = createResource({\n\turl: \"hrms.api.get_doctype_fields\",\n\tparams: { doctype: \"Leave Application\" },\n\ttransform(data) {\n\t\tlet fields = getFilteredFields(data)\n\n\t\treturn fields.map((field) => {\n\t\t\tif (field.fieldname === \"half_day_date\") field.hidden = true\n\n\t\t\tif (field.fieldname === \"posting_date\") field.default = today\n\n\t\t\treturn field\n\t\t})\n\t},\n\tonSuccess(_data) {\n\t\tleaveApprovalDetails.reload()\n\t\tleaveTypes.reload()\n\t},\n})\nformFields.reload()\n\nconst leaveApprovalDetails = createResource({\n\turl: \"hrms.api.get_leave_approval_details\",\n\tparams: { employee: currEmployee.value },\n\tonSuccess(data) {\n\t\tsetLeaveApprovers(data)\n\t},\n})\n\nconst leaveTypes = createResource({\n\turl: \"hrms.api.get_leave_types\",\n\tparams: {\n\t\temployee: currEmployee.value,\n\t\tdate: today,\n\t},\n\tonSuccess(data) {\n\t\tsetLeaveTypes(data)\n\t},\n})\n\n// form scripts\nwatch(\n\t() => leaveApplication.value.employee,\n\t(employee_id) => {\n\t\tif (props.id && employee_id !== currEmployee.value) {\n\t\t\t// if employee is not the current user, set form as read only\n\t\t\tsetFormReadOnly()\n\t\t}\n\t\tcurrEmployee.value = employee_id\n\t\tleaveTypes.fetch({ employee: currEmployee.value, date: today })\n\t\tleaveApprovalDetails.fetch({ employee: currEmployee.value })\t\t\n\t}\n)\nwatch(\n\t() => leaveApplication.value.leave_type,\n\t(leave_type) => setLeaveBalance(leave_type)\n)\n\nwatch(\n\t() => leaveApplication.value.half_day,\n\t(half_day) => setHalfDayDate(half_day)\n)\n\nwatch(\n\t() => leaveApplication.value.half_day && leaveApplication.value.half_day_date,\n\t() => setTotalLeaveDays()\n)\n\nwatch(\n\t() => leaveApplication.value.from_date,\n\t(from_date) => {\n\t\tif (!leaveApplication.value.to_date) {\n\t\t\tleaveApplication.value.to_date = from_date\n\t\t}\n\n\t\t// fetch leave types for the selected date\n\t\tleaveTypes.fetch({\n\t\t\temployee: currEmployee.value,\n\t\t\tdate: from_date,\n\t\t})\n\t}\n)\n\nwatch(\n\t() => [leaveApplication.value.from_date, leaveApplication.value.to_date],\n\t([from_date, to_date]) => {\n\t\tvalidateDates(from_date, to_date)\n\t\tsetHalfDayDateRange()\n\t\tsetTotalLeaveDays()\n\t}\n)\n\nwatch(\n\t() => leaveApplication.value.leave_approver,\n  \t(newApprover) => {\n\t\t\tconst approverField = formFields.data.find(f => f.fieldname === \"leave_approver\")\n\t\t\tconst selected = approverField?.documentList?.find(opt => opt.value === newApprover)\n\t\t\tleaveApplication.value.leave_approver_name = selected?.label?.split(\" : \")[1] || \"\"\n  }\n)\n\n// helper functions\nfunction getFilteredFields(fields) {\n\t// reduce noise from the form view by excluding unnecessary fields\n\t// ex: employee and other details can be fetched from the session user\n\tconst excludeFields = [\n\t\t\"naming_series\",\n\t\t\"sb_other_details\",\n\t\t\"salary_slip\",\n\t\t\"letter_head\",\n\t]\n\n\tconst employeeFields = [\n\t\t\"employee\",\n\t\t\"employee_name\",\n\t\t\"department\",\n\t\t\"company\",\n\t\t\"follow_via_email\",\n\t\t\"status\",\n\t\t\"posting_date\",\n\t]\n\n\tif (!props.id) excludeFields.push(...employeeFields)\n\n\treturn fields.filter((field) => !excludeFields.includes(field.fieldname))\n}\n\nfunction setFormReadOnly() {\n\tif (leaveApplication.value.leave_approver === sessionEmployee.data.user_id) return\n\tformFields.data.map((field) => (field.read_only = true))\n}\n\nfunction validateDates(from_date, to_date) {\n\tif (!(from_date && to_date)) return\n\n\tconst error_message =\n\t\tfrom_date > to_date ? __(\"To Date cannot be before From Date\") : \"\"\n\n\tconst from_date_field = formFields.data.find(\n\t\t(field) => field.fieldname === \"from_date\"\n\t)\n\tfrom_date_field.error_message = error_message\n}\n\nfunction setTotalLeaveDays() {\n\tif (!areValuesSet()) return\n\n\tconst leaveDays = createResource({\n\t\turl: \"hrms.hr.doctype.leave_application.leave_application.get_number_of_leave_days\",\n\t\tparams: {\n\t\t\temployee: currEmployee.value,\n\t\t\tleave_type: leaveApplication.value.leave_type,\n\t\t\tfrom_date: leaveApplication.value.from_date,\n\t\t\tto_date: leaveApplication.value.to_date,\n\t\t\thalf_day: leaveApplication.value.half_day,\n\t\t\thalf_day_date: leaveApplication.value.half_day_date,\n\t\t},\n\t\tonSuccess(data) {\n\t\t\tleaveApplication.value.total_leave_days = data\n\t\t},\n\t})\n\tleaveDays.reload()\n\tsetLeaveBalance()\n}\n\nfunction setLeaveBalance() {\n\tif (!areValuesSet()) return\n\n\tconst leaveBalance = createResource({\n\t\turl: \"hrms.hr.doctype.leave_application.leave_application.get_leave_balance_on\",\n\t\tparams: {\n\t\t\temployee: currEmployee.value,\n\t\t\tdate: leaveApplication.value.from_date,\n\t\t\tto_date: leaveApplication.value.to_date,\n\t\t\tleave_type: leaveApplication.value.leave_type,\n\t\t\tconsider_all_leaves_in_the_allocation_period: 1,\n\t\t},\n\t\tonSuccess(data) {\n\t\t\tleaveApplication.value.leave_balance = data\n\t\t},\n\t})\n\tleaveBalance.reload()\n}\n\nfunction setHalfDayDate(half_day) {\n\tconst half_day_date = formFields.data.find(\n\t\t(field) => field.fieldname === \"half_day_date\"\n\t)\n\thalf_day_date.hidden = !half_day\n\thalf_day_date.reqd = half_day\n\n\tif (!half_day) return\n\n\tif (leaveApplication.value.from_date === leaveApplication.value.to_date) {\n\t\tleaveApplication.value.half_day_date = leaveApplication.value.from_date\n\t} else {\n\t\tsetHalfDayDateRange()\n\t}\n}\n\nfunction setHalfDayDateRange() {\n\tconst half_day_date = formFields.data.find(\n\t\t(field) => field.fieldname === \"half_day_date\"\n\t)\n\thalf_day_date.minDate = leaveApplication.value.from_date\n\thalf_day_date.maxDate = leaveApplication.value.to_date\n}\n\nfunction setLeaveApprovers(data) {\n\tconst leave_approver = formFields.data?.find(\n\t\t(field) => field.fieldname === \"leave_approver\"\n\t)\n\tleave_approver.reqd = data?.is_mandatory\n\tleave_approver.documentList = data?.department_approvers.map((approver) => ({\n\t\tlabel: approver.full_name\n\t\t\t? `${approver.name} : ${approver.full_name}`\n\t\t\t: approver.name,\n\t\tvalue: approver.name,\n\t}))\n\tif (!leaveApplication.value.leave_approver){\n\t\tleaveApplication.value.leave_approver = data?.leave_approver\n\t\tleaveApplication.value.leave_approver_name = data?.leave_approver_name\n\t}\n\t\n}\n\nfunction setLeaveTypes(data) {\n\tconst leave_type = formFields.data.find(\n\t\t(field) => field.fieldname === \"leave_type\"\n\t)\n\tleave_type.documentList = data?.map((leave_type) => ({\n\t\tlabel: leave_type,\n\t\tvalue: leave_type,\n\t}))\n}\n\nfunction areValuesSet() {\n\treturn (\n\t\tleaveApplication.value.from_date &&\n\t\tleaveApplication.value.to_date &&\n\t\tleaveApplication.value.leave_type\n\t)\n}\n\nfunction validateForm() {\n\tsetHalfDayDate(leaveApplication.value.half_day)\n\tleaveApplication.value.employee = currEmployee.value\n}\n</script>\n"],"names":["dayjs","inject","__","today","props","__props","sessionEmployee","currEmployee","ref","leaveApplication","formFields","createResource","data","getFilteredFields","field","_data","leaveApprovalDetails","leaveTypes","setLeaveApprovers","setLeaveTypes","watch","employee_id","setFormReadOnly","leave_type","setLeaveBalance","half_day","setHalfDayDate","setTotalLeaveDays","from_date","to_date","validateDates","setHalfDayDateRange","newApprover","approverField","f","selected","_a","opt","_b","fields","excludeFields","employeeFields","error_message","from_date_field","areValuesSet","half_day_date","leave_approver","approver","validateForm"],"mappings":"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"}